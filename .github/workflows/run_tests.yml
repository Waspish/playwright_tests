name: Python autotests

on: 
  workflow_dispatch:
    inputs:
      deployment_target:
        description: Choose tests set
        required: true
        type: choice
        default: smoke
        options:
          - smoke
          - regression
          - extended
          - all
      
permissions:
  pages: write
  contents: read
  id-token: write
      
jobs:
  download-history:
    runs-on: ubuntu-latest
    name: Download history
    steps:
       - name: Set up Python environment
         uses: actions/setup-python@v5 
         with:
           python-version: 'pypy3.10'
       - run: > 
           ALLURE_ARTIFACT_ID=$(curl -L  
           -H "Accept: application/vnd.github+json"
           -H "X-Github-Api_Version: 2022-11-28"
           "https://api.github.com/repos/Waspish/playwright_tests/actions/artifacts?name=allure-results" 
           | python3 -c "import sys, json; print(json.load(sys.stdin)['artifacts'][0]['id'])")
           &&
           curl -L
           -H "Accept: application/vnd.github+json"
           -H "X-Github-Api_Version: 2022-11-28"
           -H "Authorization: Bearer ${{ secrets.TOKEN }}"
           https://api.github.com/repos/Waspish/playwright_tests/actions/artifacts/$ALLURE_ARTIFACT_ID/zip -o artifacts.zip
           &&
           PAGES_ARTIFACT_ID=$(curl -L  
           -H "Accept: application/vnd.github+json"
           -H "X-Github-Api_Version: 2022-11-28"
           "https://api.github.com/repos/Waspish/playwright_tests/actions/artifacts?name=github-pages" 
           | python3 -c "import sys, json; print(json.load(sys.stdin)['artifacts'][0]['id'])")
           &&
           curl -L
           -H "Accept: application/vnd.github+json"
           -H "X-Github-Api_Version: 2022-11-28"
           -H "Authorization: Bearer ${{ secrets.TOKEN }}"
           https://api.github.com/repos/Waspish/playwright_tests/actions/artifacts/$PAGES_ARTIFACT_ID/zip -o pages.zip
       - run: mkdir allure-results && unzip artifacts.zip -d allure-results
       - run: mkdir old_pages pages_history && unzip pages.zip -d old_pages && tar -xvf old_pages/artifact.tar -C pages_history
       - run: cp pages_history/history/* allure-results && cp -r pages_history/history allure-results
       - name: Store allure history
         uses: actions/upload-artifact@v4
         with:
           name: allure-results
           path: allure-results
           retention-days: 1


    
  run-tests:
    runs-on: ubuntu-latest
    name: Run autotests
    needs: download-history

    steps:
      - name: Checkout autotests
        uses: actions/checkout@v4
      - name: Set up Python environment
        uses: actions/setup-python@v5 
        with:
          python-version: 'pypy3.10' 
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Download artifact
        uses: actions/download-artifact@v5
      - name: Install Playwright
        run: playwright install
      - name: Run all tests
        if: "github.event.inputs.deployment_target == 'all'"
        run: pytest --alluredir=allure-results
        continue-on-error: true
      - name: Run smoke tests
        if: "github.event.inputs.deployment_target == 'smoke'"
        run: pytest -m smoke --alluredir=allure-results
        continue-on-error: true
      - name: Run regression tests
        if: "github.event.inputs.deployment_target == 'regression'"
        run: pytest -m regression --alluredir=allure-results
        continue-on-error: true
      - name: Run extended tests
        if: "github.event.inputs.deployment_target == 'extended'"
        run: pytest -m extended --alluredir=allure-results
        continue-on-error: true
      - name: Upload allure results
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: allure-results
          retention-days: 1

  generate-report:
    runs-on: ubuntu-latest
    name: Generate report
    needs: run-tests
    steps:
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v5
      - name: Install Java
        uses: actions/setup-java@v4
        with:
          distribution: 'microsoft'
          java-version: '21'
      - name: Install Allure
        run: sudo wget https://github.com/allure-framework/allure2/releases/download/2.34.1/allure-2.34.1.tgz && sudo tar -xzf allure-2.34.1.tgz -C /opt/ && sudo ln -s /opt/allure-2.34.1/bin/allure /usr/bin/allure 
      - name: Generate report
        run: allure generate -c allure-results -o _site
      - name: Save allure report
        uses: actions/upload-artifact@v4
        with:
          name: _site
          path: _site
          retention-days: 1

  publish-report:
    runs-on: ubuntu-latest
    needs: generate-report
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v5
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
      











